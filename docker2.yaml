# docker-compose.yaml
services:
  # MongoDB for run management
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    # For production, mount volumes or external disk if you want to persist data.
    # volumes:
    #   - ./mongo_data:/data/db

  # PostgreSQL for Airflow's internal metadata
  postgres:
    image: postgres:14
    container_name: airflow_postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      retries: 5
    # volumes:
    #   - ./postgres_data:/var/lib/postgresql/data

  # Redis for Celery queue
  redis:
    image: redis:latest
    container_name: airflow_redis
    ports:
      - "6379:6379"

  # Airflow Webserver
  airflow-webserver:
    image: apache/airflow:2.6.1
    container_name: airflow_webserver
    depends_on:
      - postgres
      - redis
      - mongo
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__FERNET_KEY="YOUR_FERNET_KEY"   # Replace with your generated key (quoted)
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__CORE__PARALLELISM=16                 # Example concurrency setting
      - AIRFLOW__WEBSERVER__WORKERS=4                 # Webserver concurrency
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    ports:
      - "8080:8080"
    command: >
      bash -c "airflow db init &&
               airflow users create --username admin --password admin
               --firstname admin --lastname admin
               --role Admin --email admin@example.com &&
               airflow webserver"

  # Airflow Scheduler
  airflow-scheduler:
    image: apache/airflow:2.6.1
    container_name: airflow_scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__FERNET_KEY="YOUR_FERNET_KEY" 
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: airflow scheduler

  # Airflow Worker for Celery (crucial for parallel tasks)
  airflow-worker:
    image: apache/airflow:2.6.1
    container_name: airflow_worker
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__CORE__FERNET_KEY="YOUR_FERNET_KEY"
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
    command: airflow celery worker
